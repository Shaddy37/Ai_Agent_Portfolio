{
  "name": "T-shirt Mockup Creator",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/generations",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"gpt-image-1\",\n  \"prompt\": \"{{ $json.escapedString }}\",\n  \"n\": 1,\n  \"size\": \"1024x1536\",\n  \"quality\": \"high\"\n}",
        "options": {}
      },
      "id": "97ce19f8-d83b-481d-a5c4-8ed46a06f18d",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1880,
        320
      ],
      "typeVersion": 4.2,
      "credentials": {
        "openAiApi": {
          "id": "QivR7SxB24l8KozV",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data[0].b64_json",
        "options": {}
      },
      "id": "3ba73c97-c6d7-4275-8c8c-064a49762edb",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        2080,
        320
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "options": {
          "systemMessage": "=\nYou are a creative prompt generation assistant specialized in T-shirt artwork refinement.\n\nYour job is to analyze an existing T-shirt design user message above and create a new, upgraded version that preserves the original layout, overall structure, and message placement, but enhances its visual style, mood, and artistic quality.\n\n- Keep all key design elements and text in their original positions — do not remove or move important words or graphics.\n- Improve the typography by suggesting more expressive font styling (e.g., handwritten, retro, bold serif, clean sans-serif, brush script), and enhance the lettering arrangement to feel more dynamic, elegant, or visually balanced.\n- Enhance illustrative elements, texture, and background details to feel more artistic, emotional, or premium — without overwhelming the message.\n- Use descriptive, natural language to generate a final prompt that can be used with Midjourney, DALL·E, or other image-generation AIs.\n- The new version should feel like a refined and artistic redesign, not a complete concept change.\n- Solid black background\n\n** Rule **\n- Output the final design prompt as a single plain-text sentence, without markdown, formatting, or line breaks. Make sure the prompt is concise but expressive, suitable for use inside a JSON payload or passed into an image generation API. All key elements must remain: characters, objects, text styling, and background mood — but the format should be clean, compact, and system-friendly.\n- Format the output as a single line of plain text, using escaped double quotes (\\\") where needed, suitable for inclusion in a JSON string without formatting issues."
        }
      },
      "id": "d06e9bde-0fee-42dc-9c3d-004c97c1ee49",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1240,
        320
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o",
          "cachedResultName": "GPT-4O"
        },
        "imageUrls": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {}
      },
      "id": "f54f401d-5fd3-482f-903d-322acabfcce4",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1060,
        320
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "QivR7SxB24l8KozV",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "b867eeda-8eea-4574-8537-a7130e8710c3",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1160,
        540
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "QivR7SxB24l8KozV",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8877fbdc-091b-4a1c-82cf-bf980a8c3045",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        440,
        340
      ],
      "webhookId": "22b3dae3-95e5-4bfa-8187-9dca2dc72f85",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "cb4e9a22-d429-4d11-b536-5d8760dd5042",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              },
              "leftValue": "={{ $json.chatInput }}",
              "rightValue": "https://"
            }
          ]
        },
        "options": {}
      },
      "id": "90fe70c2-3b64-4d28-82a8-c575b26c8b5b",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        800,
        340
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "jsCode": "const rawContent = $json.output;\n\n// 1. Replace all line breaks with spaces\nlet cleaned = rawContent.replace(/\\n/g, ' ');\n\n// 2. Trim any extra spaces at the beginning and end\ncleaned = cleaned.trim();\n\n// 3. Escape backslashes and double quotes for JSON safety\nlet escaped = cleaned.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n\n// 4. Remove leading or trailing escaped quotes if accidentally included\nescaped = escaped.replace(/^\\\\\\\"/, '').replace(/\\\\\\\"$/, '');\n\n// 5. Return the cleaned and fully escaped string\nreturn [\n  {\n    json: {\n      escapedString: escaped\n    }\n  }\n];\n"
      },
      "id": "00509d12-784c-4f9f-a5e4-fdccf5382d2e",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        1620,
        320
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## Provide an image URL",
        "height": 320,
        "width": 400,
        "color": 4
      },
      "id": "caec0c49-a46c-42a5-bb64-f6ba86490eef",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        300,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Analyze image and generate a new prompt",
        "height": 580,
        "width": 540,
        "color": 6
      },
      "id": "d0862a3b-7409-49a9-b68e-ff7046031885",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1020,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Create a new T-shirt Design",
        "height": 320,
        "width": 460,
        "color": 3
      },
      "id": "cea5c30b-154a-4c51-9b9a-e187c27224d7",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1800,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "test",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1L0LXIYtmiHOj-Y0BB2cRmWppT9FAQvUy",
          "mode": "list",
          "cachedResultName": "T-Shirt Designs",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1L0LXIYtmiHOj-Y0BB2cRmWppT9FAQvUy"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2460,
        320
      ],
      "id": "ee73d1cf-f5af-47db-bba4-5479b2eb1d73",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lWWlmCXTllWWEiUS",
          "name": "Google Drive account 5"
        }
      }
    },
    {
      "parameters": {
        "content": "# Workflow Summary\n\nThis n8n workflow transforms a rough or outdated T-shirt mockup into a clean, print-ready design using OpenAI’s advanced vision and image generation models. It automates the process from image input to final artwork creation, making it ideal for creators and designers who want to streamline T-shirt design production.\n\n## What the Workflow Does\n- Accepts an image of a T-shirt mockup (uploaded via link)\n\n- Analyzes the design using OpenAI’s vision model (GPT-4)\n\n- Extracts core design elements: characters, layout, typography, and style\n\n- Converts the image into a refined, text-based prompt\n\n- Sends this prompt to OpenAI’s gpt-image-1 to generate a high-quality, print-ready graphic\n\n- Ensures the final image is suitable for printing on a solid black background, with no visible mockup elements\n\n## Step-by-Step Breakdown\n\n1. Image Input\nThe user submits a link to a T-shirt mockup image through a chat or input field.\n\n2. Image Analysis\nThe workflow uses OpenAI’s GPT-4 Vision to analyze the image, identifying key visual elements such as text, characters, composition, and style.\n\n3. Prompt Generation\nAn AI agent transforms these elements into a concise, structured prompt that:\n\nRetains the original message and layout\n\nEnhances visual quality\n\nRemoves collars, sleeves, and shadows\n\nLocks the design on a clean black background\n\n4. Prompt Formatting\nA JavaScript function escapes special characters to ensure prompt compatibility with downstream APIs.\n\n5. Artwork Generation\nThe prompt is sent to the gpt-image-1 API, which returns a fully reimagined T-shirt graphic ready for production.\n\n6. Optional Output\nThe final image can be sent to platforms like Telegram, Notion, or integrated into design review systems.\n\n## Important Note on Usage Costs\nThe image generation step relies on OpenAI’s gpt-image-1 model, a paid service. Each request may cost approximately $0.25, depending on settings. Be sure to review your OpenAI API usage plan and monitor expenses, especially if scaling or automating this workflow.\n\n## Monitor usage: OpenAI Pricing & Usage\n\n## Key Benefits\n- Turns mockup images into production-ready artwork\n\n- Removes all mockup elements to focus on design only\n\n- Optimized specifically for black-background T-shirt printing\n\n- Fully modular and easy to extend (e.g., auto-upload, approval flows)\n\n- No need for manual prompt writing or image editing\n\n## Quick Start\n- Import the .json file into your n8n instance\n\n- Add your OpenAI API credentials (Vision + Image)\n\n- Trigger the workflow with an image link\n\n- Receive a clean, AI-generated T-shirt design ready for print",
        "height": 1700,
        "width": 880,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -820,
        -520
      ],
      "id": "2dd20ce1-7cf8-45cb-8e45-73d624abfc70",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Check if the message is a URL",
        "height": 320,
        "width": 280,
        "color": 5
      },
      "id": "39a88ddf-4385-4d38-a399-f3b459ec0bf7",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save Your Design",
        "height": 320,
        "width": 460
      },
      "id": "6ffb3f16-acb3-4f27-842d-5abaebf91b73",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2280,
        220
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7ad9e640-079d-4b20-b5cc-fca2541deb39",
  "meta": {
    "templateId": "3959",
    "templateCredsSetupCompleted": true,
    "instanceId": "f96a7e8659163312cbaf16ad76688747ea79fa6bf8e4ec720c14444abdf2c12c"
  },
  "id": "bpVMPTvzbTaSQvOg",
  "tags": []
}